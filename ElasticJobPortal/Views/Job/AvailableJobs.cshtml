@using Microsoft.AspNetCore.Identity
@model X.PagedList.IPagedList<ElasticJobPortal.Models.Job>

@{
    ViewData["Title"] = "Available Jobs";
    var appliedJobIds = ViewBag.AppliedJobs as List<int> ?? new List<int>();
}

<!-- Include Bootstrap 5 CSS, Font Awesome, and Toastr for notifications -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />

<style>
    body {
        background-color: #f4f7fa;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .job-container {
        max-width: 1200px;
        margin: 20px auto;
        padding: 0 15px;
    }

    .card {
        border: none;
        border-radius: 10px;
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
        }

    .card-title {
        font-size: 1.25rem;
        color: #333;
    }

    .card-subtitle {
        font-size: 1rem;
        color: #6c757d;
    }

    .card-text {
        font-size: 0.95rem;
        color: #555;
    }

        .card-text strong {
            color: #333;
        }

    .apply-btn {
        background-color: #007bff;
        border: none;
        border-radius: 5px;
        padding: 8px 15px;
        transition: background-color 0.3s;
    }

        .apply-btn:hover {
            background-color: #0056b3;
        }

    .applied-btn {
        background-color: #6c757d;
        border: none;
        border-radius: 5px;
        padding: 8px 15px;
        cursor: not-allowed;
    }

    .file-input {
        font-size: 0.9rem;
    }

    .role-alert {
        border-radius: 5px;
        padding: 12px;
        margin-bottom: 20px;
    }

    /* Pagination Styles */
    .pagination-container {
        display: flex;
        justify-content: center;
        margin-top: 30px;
    }

    .pagination {
        display: flex;
        gap: 10px;
        align-items: center;
    }

        .pagination .page-item {
            transition: all 0.3s ease;
        }

        .pagination .page-link {
            border: none;
            border-radius: 8px;
            padding: 10px 15px;
            font-size: 1rem;
            color: #333;
            background-color: #fff;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

            .pagination .page-link:hover {
                background-color: #007bff;
                color: #fff;
                box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            }

        .pagination .page-item.active .page-link {
            background-color: #007bff;
            color: #fff;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

        .pagination .page-item.disabled .page-link {
            background-color: #f4f7fa;
            color: #6c757d;
            cursor: not-allowed;
            box-shadow: none;
        }

    /* Responsive adjustments */
    (max-width: 768px) {
        .card

    {
        margin-bottom: 15px;
    }

    .card-title {
        font-size: 1.1rem;
    }

    .card-text {
        font-size: 0.9rem;
    }

    .pagination .page-link {
        padding: 8px 12px;
        font-size: 0.9rem;
    }

    }
</style>

<div class="job-container">
    <h2 class="mb-4 text-center">Available Jobs</h2>

    <!-- Role-based alert -->
    @if (User.IsInRole("JobSeeker"))
    {
        <div class="alert alert-success role-alert">
            <i class="fas fa-check-circle me-2"></i> You are in JobSeeker role
        </div>
    }
    else
    {
        <div class="alert alert-danger role-alert">
            <i class="fas fa-exclamation-circle me-2"></i> Not in JobSeeker role
        </div>
    }

    <div class="row">
        @foreach (var job in Model)
        {
            <div class="col-md-4 col-sm-6 mb-4">
                <div class="card h-100 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">@job.Title</h5>
                        <h6 class="card-subtitle mb-2 text-muted">@job.Company</h6>
                        <p class="card-text">
                            <strong>Description:</strong> @job.Description<br />
                            <strong>Job Type:</strong> @job.JobType<br />
                            <strong>Skills:</strong> @job.SkillsCsv
                        </p>
                        @if (appliedJobIds.Contains(job.Id))
                        {
                            <button class="btn btn-sm applied-btn" disabled>
                                <i class="fas fa-check me-1"></i> Applied
                            </button>
                        }
                        else
                        {
                            <form asp-action="Apply" asp-controller="Job" enctype="multipart/form-data" method="post" class="apply-form">
                                <input type="hidden" name="jobId" value="@job.Id" />
                                <div class="mb-2">
                                    <input type="file" name="resumeFile" accept=".pdf" required class="form-control form-control-sm file-input" />
                                    <div class="invalid-feedback">
                                        Please upload a PDF resume.
                                    </div>
                                </div>
                                <button type="submit" class="btn btn-sm apply-btn">
                                    <i class="fas fa-upload me-1"></i> Apply with Resume
                                </button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Updated Pagination -->
    <div class="pagination-container">
        @using X.PagedList.Mvc.Core
        <nav aria-label="Page navigation">
            @Html.PagedListPager(Model, page => Url.Action("AvailableJobs", new { page, keyword = ViewBag.Keyword }),
                        new PagedListRenderOptions
                        {
                            UlElementClasses = new[] { "pagination", "pagination-sm" },
                            LiElementClasses = new[] { "page-item" },
                            PageClasses = new[] { "page-link" },
                            DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                            DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                            MaximumPageNumbersToDisplay = 5
                        })
        </nav>
    </div>
</div>

<!-- Include Bootstrap JS, Toastr, and jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script>
    $(document).ready(function () {
        // Client-side form validation and Toastr notifications
        $('.apply-form').on('submit', function (e) {
            const fileInput = $(this).find('input[type="file"]')[0];
            if (!fileInput.files[0]) {
                e.preventDefault();
                $(fileInput).addClass('is-invalid');
                toastr.error('Please select a PDF file to upload.');
                return;
            }
            if (!fileInput.files[0].name.endsWith('.pdf')) {
                e.preventDefault();
                $(fileInput).addClass('is-invalid');
                toastr.error('Only PDF files are allowed.');
                return;
            }

            // Show success toast (assuming server-side validation passes)
            toastr.success('Application submitted successfully!');
        });

        // Remove invalid class when user selects a new file
        $('.file-input').on('change', function () {
            $(this).removeClass('is-invalid');
        });
    });

    // Toastr options
    toastr.options = {
        positionClass: "toast-top-right",
        timeOut: 3000,
        progressBar: true
    };
</script>